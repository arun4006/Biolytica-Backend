service: file-up-aws
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:GetObject"
            - "s3:PutObject"
            - "s3:ListBucket"
          Resource: "arn:aws:s3:::${self:custom.bucketName}/*"

        - Effect: "Allow"
          Action:
            - cognito-idp:AdminInitiateAuth
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
          Resource: "*"

  environment:
    bucketName: ${self:custom.bucketName}   
    userPoolId: { Ref: UserPool }
    clientId: { Ref: UserClient }
    httpApi:
      cors: true
      authorizers: 
         PrivateAuthorizer :
            identitySource: $request.header.Authorization
            issuerUrl: "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_2u5Iir9c4"
            audience : { Ref : UserClient }  

custom:
  bucketName: aws-file-up

functions:

 signupUser:
    handler: cognitoService/userRegisterService.handler
    events:
      - http:
          path: user/signup
          method: post
          cors: true
 loginUser:
    handler: cognitoService/userLoginService.handler
    events:
      - http:
          path: user/login
          method: post
          cors: true

 UserProfile:
    handler: cognitoService/userProfileService.handler
    events:
      - http:
          path: user/profile
          method: post
          cors: true 
          authorizer:
            name: PrivateAuthorizer          

   
 putObject:
    handler: s3Services/fileUploadService.handler
    events:
      - http:
          path: /file/upload
          method: post
          cors: true  

 getObjects:
    handler: s3Services/getFilesService.handler
    events:
      - http:
          path: /file
          method: get
          cors: true  
                       
  
                                   
resources:
  Resources:
    
    UserPool: 
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-pool-${sls:stage}
        Schema: 
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy: 
            MinimumLength: 6
        AutoVerifiedAttributes: ["email"]    

    UserClient: 
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-client-${sls:stage}
        GenerateSecret: false
        UserPoolId: 
          Ref: UserPool
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows: 
          - "ADMIN_NO_SRP_AUTH"

    

  Upload-Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: aws-file-up
        AccessControl: Private
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - PUT
                - POST
                - HEAD
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
              ExposedHeaders:
                - ETag  
